@name Heros-funky-Throttle-and-bits-pack/Funky steam throttle 4 by hero
@inputs Throttle

Scale = 1.15

BaseColour = vec(36)
BaseTexture = "models/proppertextures/acrylic_grimey"

E=entity()
if( first() | duped() ){
holoCreate(1,E:toWorld(+vec(0,-3,0)*Scale))
holoScale(1,vec(0.0,0.0,0.0))
holoParent(1, entity())



local P2M = p2mCreate(3,holoEntity(1):pos(),holoEntity(1):angles())
local P2M2 = p2mCreate(2,E:pos(),E:angles())

P2M:p2mPushModel(3,"models/sprops/cylinders/size_1/cylinder_1_5x60.mdl",array(),vec(0,0,0)*Scale,ang(90,0,0),vec(1,1,1.05)*Scale,0,0,0)

P2M:p2mPushModel(2,"models/sprops/rectangles/size_1/rect_3x36x3.mdl",array(),vec(-32,11,0)*Scale,ang(0,90,0),vec(0.65,0.2,0.45)*Scale,0,0,0)
P2M:p2mPushModel(1,"models/beer/wiremod/hydraulic.mdl",vec(-32.4,0,0)*Scale,ang(90,0,0),vec(0.325)*Scale,0,0,0)
P2M:p2mPushModel(2,"models/sprops/rectangles/size_1/rect_3x36x3.mdl",array(),vec(32,11,0)*Scale,ang(0,90,0),vec(0.65,0.2,0.45)*Scale,0,0,0)
P2M:p2mPushModel(1,"models/beer/wiremod/hydraulic.mdl",vec(32.4,0,0)*Scale,ang(-90,0,0),vec(0.325)*Scale,0,0,0)

P2M:p2mPushModel(1,"models/sprops/rectangles/size_1/rect_3x3x3.mdl",vec(32,23,0)*Scale,ang(-90,0,0),vec(0.55,0.25,0.3)*Scale,0,0,0)
P2M:p2mPushModel(3,"models/monkatraztrainprops/parts/stand_fm_mid_6sl-xm781_handles.mdl",vec(32,18.8,0)*Scale,ang(0,-90,90),vec(1,1.35,1)*Scale,0,0,2)
P2M:p2mPushModel(1,"models/sprops/rectangles/size_1/rect_3x3x3.mdl",vec(-32,23,0)*Scale,ang(-90,0,0),vec(0.55,0.25,0.3)*Scale,0,0,0)
P2M:p2mPushModel(3,"models/monkatraztrainprops/parts/stand_fm_mid_6sl-xm781_handles.mdl",vec(-32,18.8,0)*Scale,ang(0,-90,90),vec(1,1.35,1)*Scale,0,0,2)




P2M2:p2mPushModel(1,"models/props_bennjo/base_1a.mdl",array(),vec(0,0,0)*Scale,ang(0,0,0),vec(0.8,0.45,0.8)*Scale,0,0,0,array(vec(0,0,0),vec(0,0,0)))
P2M2:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x6.mdl",array(),vec(0,0,0)*Scale,ang(0,0,90),vec(1,1,1)*Scale,0,0,0,array(vec(0,0,0),vec(0,0,0)))
P2M2:p2mPushModel(1,"models/toast/steam/steam_valve_body.mdl",array(),vec(0,-3,0)*Scale,ang(90,90,0),vec(1,1,1)*Scale,0,0,0,array(vec(0,0,0),vec(0,0,0)))
P2M2:p2mPushModel(1,"models/sprops/cylinders/size_1/cylinder_1_5x60.mdl",array(),vec(0,-3,0)*Scale,ang(90,0,0),vec(1.06,1.06,1)*Scale,0,0,0)

P2M2:p2mPushModel(2,"models/bptrainpack/headboard1/headboard1.mdl",array(),vec(31.4,-4.8,-5)*Scale,ang(195,90,0),vec(0.12)*Scale,0,0,0)
P2M2:p2mPushModel(2,"models/bptrainpack/headboard1/headboard1.mdl",array(),vec(31.4,-4.8,-5)*Scale,ang(-195,-90,0),vec(0.12)*Scale,0,0,0)

P2M2:p2mPushModel(2,"models/sprops/rectangles_superthin/size_1/rect_3x3.mdl",array(),vec(31.85,-7.25,-3.25)*Scale,ang(0,0,40),vec(0.48)*Scale,0,0,0)
P2M2:p2mPushModel(2,"models/sprops/rectangles_superthin/size_1/rect_3x3.mdl",array(),vec(31.85,-1.82,-4.7)*Scale,ang(0,0,-68),vec(0.48)*Scale,0,0,0)

P2M2:p2mPushModel(1,"models/sprops/misc/alphanum/alphanum_l.mdl",array(),vec(30,-3,-2.75)*Scale,ang(0,180,0),vec(0.4)*Scale,0,0,0)
P2M2:p2mPushModel(1,"models/sprops/misc/alphanum/alphanum_l.mdl",array(),vec(30,-3,-2.75)*Scale,ang(0,180,0),vec(0.4)*Scale,0,0,0)


P2M2:p2mPushModel(2,"models/bptrainpack/headboard1/headboard1.mdl",array(),vec(-31.4,-4.8,-5)*Scale,ang(195,90,0),vec(0.12)*Scale,0,0,0)
P2M2:p2mPushModel(2,"models/bptrainpack/headboard1/headboard1.mdl",array(),vec(-31.4,-4.8,-5)*Scale,ang(-195,-90,0),vec(0.12)*Scale,0,0,0)

P2M2:p2mPushModel(2,"models/sprops/rectangles_superthin/size_1/rect_3x3.mdl",array(),vec(-31.85,-7.25,-3.25)*Scale,ang(0,0,40),vec(0.48)*Scale,0,0,0)
P2M2:p2mPushModel(2,"models/sprops/rectangles_superthin/size_1/rect_3x3.mdl",array(),vec(-31.85,-1.82,-4.7)*Scale,ang(0,0,-68),vec(0.48)*Scale,0,0,0)

P2M2:p2mPushModel(1,"models/sprops/misc/alphanum/alphanum_l.mdl",array(),vec(-30,-3,-2.75)*Scale,ang(0,0,0),vec(0.4)*Scale,0,0,0)



P2M:p2mSetColor(1,BaseColour)
P2M:p2mSetMaterial(1,BaseTexture)
P2M:p2mSetUV(1,51)
P2M:p2mSetColor(2,vec(255))
P2M:p2mSetMaterial(2,"models/proppertextures/acrylic_red")
P2M:p2mSetUV(2,51)
P2M:p2mSetColor(3,vec(255))
P2M:p2mSetMaterial(3,"models/proppertextures/aluminum")
P2M:p2mSetUV(3,51)

P2M:p2mBuild()
P2M:parentTo(holoEntity(1))



P2M2:p2mSetColor(1,BaseColour)
P2M2:p2mSetMaterial(1,BaseTexture)
P2M2:p2mSetUV(1,51)
P2M2:p2mSetColor(2,vec(255))
P2M2:p2mSetMaterial(2,"models/proppertextures/aluminum")
P2M2:p2mSetUV(2,51)
P2M2:p2mBuild()
P2M2:parentTo(E)


}

interval(100)
if(Throttle > 0){
A=Throttle*-4+180
}
else{
A=Throttle*-4+180
}
 
holoAng(1, entity():toWorld(ang(0,0,88+A)))




